<!DOCTYPE doc [
	<!ENTITY trade  "&#153;">
	<!ENTITY reg "&#174;">
]>

<article link="SWT-Design-1.html">
	<title>
		SWT: The Standard Widget Toolkit PART 1: Implementation Strategy
		for Java&trade;	Natives
	</title>
	<date>March 22, 2001</date>
	<category>rcp</category>
	<category>swt</category>
	<author>
		<name>Steve Northover</name>
		<company>IBM</company>
	</author>
	<description>
		The first in a series of articles about the design ideas behind
		SWT. SWT is the software component that delivers native widget
		functionality for the Eclipse platform in an operating system
		independent manner. It is analogous to AWT/Swing in Java with a
		difference - SWT uses a rich set of native widgets. Even in an
		ideal situation, industrial strength cross platform widget
		libraries are very difficult to write and maintain. This is due
		to the inherent complexity of widget systems and the many subtle
		differences between platforms. There are several basic
		approaches that have helped significantly to reduce the
		complexity of the problem and deliver high quality libraries.
		This article discusses one of them, the low level implementation
		techniques used to implement SWT on different platforms.
		Examples are drawn from the Windows
		&reg;
		and Motif implementations.
	</description>
</article>
