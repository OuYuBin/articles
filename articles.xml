<?xml version="1.0" ?>
<articles version="1.0">
	<article link="../whitepapers/eclipse-overview.pdf">
		<title>Eclipse Platform Technical Overview</title>
		<date>July 2001</date>
		<update>February 2003</update>
		<abstract>
			The Eclipse Platform is designed for building integrated
			development environments (IDEs) that can be used to create
			applications as diverse as web sites, embedded Java<sup>TM</sup>
			programs, C++ programs, and Enterprise JavaBeans
			<sup>TM</sup>. This paper is a general technical introduction to the
			Eclipse Platform. Part I presents a technical overview of
			its architecture. Part II is a case study of how the Eclipse
			Platform was used to build a full-featured Java development
			environment.
		</abstract>
	</article>
	<article
		link="Article-Plugging-into-SourceForge/sourceforge.html">
		<title>Plugging into SourceForge.net</title>
		<author name="David Biesack" company="SAS" />
		<date>October 15, 2005</date>
		<category>General</category>
		<abstract>
			Congratulations on taking the plunge and writing an open
			source plug-in for the Eclipse platform. SourceForge.net can
			provide a good home your plug-in, but information on how
			best to set up an Eclipse project there is sparse. This
			article is an introduction to SourceForge for the Eclipse
			developer. You will learn the features available to the
			SourceForge.net open source developer community and be
			guided through the process, from creating a SourceForge
			project to hosting your Eclipse Update site.
		</abstract>
	</article>

	<article link="Article-PDE-Automation/automation.html">
		<title>
			Build and Test Automation for Plug-ins and Features
		</title>
		<author name="Markus Barchfeld" company="Zuehlke Engineering" />
		<date>May 29, 2005</date>
		<category>General</category>
		<abstract>
			Eclipse offers the possibility to build plug-ins
			automatically outside the Eclipse IDE, which is called
			"headless build". Eclipse itself is built headless and since
			Eclipse is an assembly of plug-ins, this feature is also
			available for any other plug-in. Although the set up of
			automatic building and testing requires only a couple of
			files, it can be tedious work to do nonetheless. This
			article shares the experiences and lessons learned while
			setting up automatic building and testing for an Open-Source
			Eclipse plug-in called RDT, Ruby Development Tools.
		</abstract>
	</article>

	<article link="Article-RCP-1/tutorial1.html">
		<title>Rich Client Tutorial Part 1</title>
		<author name="Ed Burnette" company="SAS" />
		<date>July 28, 2004</date>
		<update>July 2005</update>
		<relevance>Eclipse 3.1</relevance>
		<category>General</category>
		<category>RCP</category>
		<abstract>
			The Rich Client Platform (RCP) is an exciting new way to
			build Java applications that can compete with native
			applications on any platform. This tutorial is designed to
			get you started building RCP applications quickly. It has
			been updated for Eclipse 3.1.
		</abstract>
	</article>

	<article link="Article-RCP-2/tutorial2.html">
		<title>Rich Client Tutorial Part 2</title>
		<author name="Ed Burnette" company="SAS" />
		<date>August 9, 2004</date>
		<category>General</category>
		<category>RCP</category>
		<abstract>
			The Rich Client Platform (RCP) allows you to build Java
			applications that can compete with native applications on
			any platform. Part 1 of the tutorial introduced you to the
			platform and the steps used to build the smallest possible
			RCP program. In part 2 we'll look at what we did in more
			detail and introduce some of the configuration classes that
			let you take control of much of the layout and functionality
			of an RCP application.
		</abstract>
	</article>
</articles>